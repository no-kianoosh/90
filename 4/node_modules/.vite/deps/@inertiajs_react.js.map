{
  "version": 3,
  "sources": ["../../@inertiajs/react/src/index.ts", "../../@inertiajs/react/src/createInertiaApp.ts", "../../@inertiajs/react/src/App.ts", "../../@inertiajs/react/src/HeadContext.ts", "../../@inertiajs/react/src/PageContext.ts", "../../@inertiajs/react/src/Deferred.ts", "../../@inertiajs/react/src/usePage.ts", "../../@inertiajs/react/src/Form.ts", "../../@inertiajs/react/src/useForm.ts", "../../@inertiajs/react/src/useRemember.ts", "../../@inertiajs/react/src/Head.ts", "../../@inertiajs/react/src/InfiniteScroll.ts", "../../@inertiajs/react/src/Link.ts", "../../@inertiajs/react/src/usePoll.ts", "../../@inertiajs/react/src/usePrefetch.ts", "../../@inertiajs/react/src/WhenVisible.ts"],
  "sourcesContent": ["import { progress as Progress, router as Router } from '@inertiajs/core'\n\nexport const progress = Progress\nexport const router = Router\nexport { default as createInertiaApp } from './createInertiaApp'\nexport { default as Deferred } from './Deferred'\nexport { default as Form } from './Form'\nexport { default as Head } from './Head'\nexport { default as InfiniteScroll } from './InfiniteScroll'\nexport { InertiaLinkProps, default as Link } from './Link'\nexport {\n  InertiaFormProps,\n  SetDataAction,\n  SetDataByKeyValuePair,\n  SetDataByMethod,\n  SetDataByObject,\n  default as useForm,\n} from './useForm'\nexport { default as usePage } from './usePage'\nexport { default as usePoll } from './usePoll'\nexport { default as usePrefetch } from './usePrefetch'\nexport { default as useRemember } from './useRemember'\nexport { default as WhenVisible } from './WhenVisible'\n", "import { Page, PageProps, PageResolver, router, setupProgress } from '@inertiajs/core'\nimport { ComponentType, FunctionComponent, Key, ReactElement, ReactNode, createElement } from 'react'\nimport { renderToString } from 'react-dom/server'\nimport App from './App'\n\ntype ReactInstance = ReactElement\ntype ReactComponent = ReactNode\n\ntype HeadManagerOnUpdate = (elements: string[]) => void // TODO: When shipped, replace with: Inertia.HeadManagerOnUpdate\ntype HeadManagerTitleCallback = (title: string) => string // TODO: When shipped, replace with: Inertia.HeadManagerTitleCallback\n\ntype AppType<SharedProps extends PageProps = PageProps> = FunctionComponent<\n  {\n    children?: (props: { Component: ComponentType; key: Key; props: Page<SharedProps>['props'] }) => ReactNode\n  } & SetupOptions<unknown, SharedProps>['props']\n>\n\nexport type SetupOptions<ElementType, SharedProps extends PageProps> = {\n  el: ElementType\n  App: AppType\n  props: {\n    initialPage: Page<SharedProps>\n    initialComponent: ReactComponent\n    resolveComponent: PageResolver\n    titleCallback?: HeadManagerTitleCallback\n    onHeadUpdate?: HeadManagerOnUpdate\n  }\n}\n\ntype BaseInertiaAppOptions = {\n  title?: HeadManagerTitleCallback\n  resolve: PageResolver\n}\n\ntype CreateInertiaAppSetupReturnType = ReactInstance | void\ntype InertiaAppOptionsForCSR<SharedProps extends PageProps> = BaseInertiaAppOptions & {\n  id?: string\n  page?: Page | string\n  render?: undefined\n  progress?:\n    | false\n    | {\n        delay?: number\n        color?: string\n        includeCSS?: boolean\n        showSpinner?: boolean\n      }\n  setup(options: SetupOptions<HTMLElement, SharedProps>): CreateInertiaAppSetupReturnType\n}\n\ntype CreateInertiaAppSSRContent = { head: string[]; body: string }\ntype InertiaAppOptionsForSSR<SharedProps extends PageProps> = BaseInertiaAppOptions & {\n  id?: undefined\n  page: Page | string\n  render: typeof renderToString\n  progress?: undefined\n  setup(options: SetupOptions<null, SharedProps>): ReactInstance\n}\n\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>(\n  options: InertiaAppOptionsForCSR<SharedProps>,\n): Promise<CreateInertiaAppSetupReturnType>\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>(\n  options: InertiaAppOptionsForSSR<SharedProps>,\n): Promise<CreateInertiaAppSSRContent>\nexport default async function createInertiaApp<SharedProps extends PageProps = PageProps>({\n  id = 'app',\n  resolve,\n  setup,\n  title,\n  progress = {},\n  page,\n  render,\n}: InertiaAppOptionsForCSR<SharedProps> | InertiaAppOptionsForSSR<SharedProps>): Promise<\n  CreateInertiaAppSetupReturnType | CreateInertiaAppSSRContent\n> {\n  const isServer = typeof window === 'undefined'\n  const el = isServer ? null : document.getElementById(id)\n  const initialPage = page || JSON.parse(el.dataset.page)\n  // @ts-expect-error\n  const resolveComponent = (name) => Promise.resolve(resolve(name)).then((module) => module.default || module)\n\n  let head = []\n\n  const reactApp = await Promise.all([\n    resolveComponent(initialPage.component),\n    router.decryptHistory().catch(() => {}),\n  ]).then(([initialComponent]) => {\n    return setup({\n      // @ts-expect-error\n      el,\n      App,\n      props: {\n        initialPage,\n        initialComponent,\n        resolveComponent,\n        titleCallback: title,\n        onHeadUpdate: isServer ? (elements) => (head = elements) : null,\n      },\n    })\n  })\n\n  if (!isServer && progress) {\n    setupProgress(progress)\n  }\n\n  if (isServer) {\n    const body = await render(\n      createElement(\n        'div',\n        {\n          id,\n          'data-page': JSON.stringify(initialPage),\n        },\n        // @ts-expect-error\n        reactApp,\n      ),\n    )\n\n    return { head, body }\n  }\n}\n", "import { createHeadManager, PageHandler, router } from '@inertiajs/core'\nimport { createElement, useEffect, useMemo, useState } from 'react'\nimport HeadContext from './HeadContext'\nimport PageContext from './PageContext'\n\nlet currentIsInitialPage = true\nlet routerIsInitialized = false\nlet swapComponent: PageHandler = async () => {\n  // Dummy function so we can init the router outside of the useEffect hook. This is\n  // needed so `router.reload()` works right away (on mount) in any of the user's\n  // components. We swap in the real function in the useEffect hook below.\n  currentIsInitialPage = false\n}\n\nexport default function App({\n  children,\n  initialPage,\n  initialComponent,\n  resolveComponent,\n  titleCallback,\n  onHeadUpdate,\n}) {\n  const [current, setCurrent] = useState({\n    component: initialComponent || null,\n    page: initialPage,\n    key: null,\n  })\n\n  const headManager = useMemo(() => {\n    return createHeadManager(\n      typeof window === 'undefined',\n      titleCallback || ((title) => title),\n      onHeadUpdate || (() => {}),\n    )\n  }, [])\n\n  if (!routerIsInitialized) {\n    router.init({\n      initialPage,\n      resolveComponent,\n      swapComponent: async (args) => swapComponent(args),\n    })\n\n    routerIsInitialized = true\n  }\n\n  useEffect(() => {\n    swapComponent = async ({ component, page, preserveState }) => {\n      if (currentIsInitialPage) {\n        // We block setting the current page on the initial page to\n        // prevent the initial page from being re-rendered again.\n        currentIsInitialPage = false\n        return\n      }\n\n      setCurrent((current) => ({\n        component,\n        page,\n        key: preserveState ? current.key : Date.now(),\n      }))\n    }\n\n    router.on('navigate', () => headManager.forceUpdate())\n  }, [])\n\n  if (!current.component) {\n    return createElement(\n      HeadContext.Provider,\n      { value: headManager },\n      createElement(PageContext.Provider, { value: current.page }, null),\n    )\n  }\n\n  const renderChildren =\n    children ||\n    (({ Component, props, key }) => {\n      const child = createElement(Component, { key, ...props })\n\n      if (typeof Component.layout === 'function') {\n        return Component.layout(child)\n      }\n\n      if (Array.isArray(Component.layout)) {\n        return Component.layout\n          .concat(child)\n          .reverse()\n          .reduce((children, Layout) => createElement(Layout, { children, ...props }))\n      }\n\n      return child\n    })\n\n  return createElement(\n    HeadContext.Provider,\n    { value: headManager },\n    createElement(\n      PageContext.Provider,\n      { value: current.page },\n      renderChildren({\n        Component: current.component,\n        key: current.key,\n        props: current.page.props,\n      }),\n    ),\n  )\n}\n\nApp.displayName = 'Inertia'\n", "import { createContext } from 'react'\n\nconst headContext = createContext(undefined)\nheadContext.displayName = 'InertiaHeadContext'\n\nexport default headContext\n", "import { createContext } from 'react'\n\nconst pageContext = createContext(undefined)\npageContext.displayName = 'InertiaPageContext'\n\nexport default pageContext\n", "import { ReactNode, useEffect, useMemo, useState } from 'react'\nimport { router } from '.'\nimport usePage from './usePage'\n\nconst urlWithoutHash = (url: URL | Location): URL => {\n  url = new URL(url.href)\n  url.hash = ''\n\n  return url\n}\n\nconst isSameUrlWithoutHash = (url1: URL | Location, url2: URL | Location): boolean => {\n  return urlWithoutHash(url1).href === urlWithoutHash(url2).href\n}\n\ninterface DeferredProps {\n  children: ReactNode | (() => ReactNode)\n  fallback: ReactNode | (() => ReactNode)\n  data: string | string[]\n}\n\nconst Deferred = ({ children, data, fallback }: DeferredProps) => {\n  if (!data) {\n    throw new Error('`<Deferred>` requires a `data` prop to be a string or array of strings')\n  }\n\n  const [loaded, setLoaded] = useState(false)\n  const pageProps = usePage().props\n  const keys = useMemo(() => (Array.isArray(data) ? data : [data]), [data])\n\n  useEffect(() => {\n    const removeListener = router.on('start', (e) => {\n      const isPartialVisit = e.detail.visit.only.length > 0 || e.detail.visit.except.length > 0\n      const isReloadingKey = e.detail.visit.only.find((key) => keys.includes(key))\n\n      if (isSameUrlWithoutHash(e.detail.visit.url, window.location) && (!isPartialVisit || isReloadingKey)) {\n        setLoaded(false)\n      }\n    })\n\n    return () => {\n      removeListener()\n    }\n  }, [])\n\n  useEffect(() => {\n    setLoaded(keys.every((key) => pageProps[key] !== undefined))\n  }, [pageProps, keys])\n\n  if (loaded) {\n    return typeof children === 'function' ? children() : children\n  }\n\n  return typeof fallback === 'function' ? fallback() : fallback\n}\n\nDeferred.displayName = 'InertiaDeferred'\n\nexport default Deferred\n", "import { Page, PageProps } from '@inertiajs/core'\nimport { useContext } from 'react'\nimport PageContext from './PageContext'\n\nexport default function usePage<TPageProps extends PageProps = PageProps>(): Page<TPageProps> {\n  const page = useContext(PageContext)\n\n  if (!page) {\n    throw new Error('usePage must be used within the Inertia component')\n  }\n\n  return page\n}\n", "import {\n  FormComponentProps,\n  FormComponentRef,\n  FormComponentSlotProps,\n  FormDataConvertible,\n  formDataToObject,\n  isUrlMethodPair,\n  mergeDataIntoQueryString,\n  Method,\n  resetFormFields,\n  VisitOptions,\n} from '@inertiajs/core'\nimport { isEqual } from 'lodash-es'\nimport React, {\n  createElement,\n  FormEvent,\n  forwardRef,\n  ReactNode,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport useForm from './useForm'\n\n// Polyfill for startTransition to support React 16.9+\nconst deferStateUpdate = (callback: () => void) => {\n  typeof React.startTransition === 'function' ? React.startTransition(callback) : setTimeout(callback, 0)\n}\n\ntype ComponentProps = (FormComponentProps &\n  Omit<React.FormHTMLAttributes<HTMLFormElement>, keyof FormComponentProps | 'children'> &\n  Omit<React.AllHTMLAttributes<HTMLFormElement>, keyof FormComponentProps | 'children'>) & {\n  children: ReactNode | ((props: FormComponentSlotProps) => ReactNode)\n}\n\ntype FormSubmitOptions = Omit<VisitOptions, 'data' | 'onPrefetched' | 'onPrefetching'>\n\nconst noop = () => undefined\n\nconst Form = forwardRef<FormComponentRef, ComponentProps>(\n  (\n    {\n      action = '',\n      method = 'get',\n      headers = {},\n      queryStringArrayFormat = 'brackets',\n      errorBag = null,\n      showProgress = true,\n      transform = (data) => data,\n      options = {},\n      onStart = noop,\n      onProgress = noop,\n      onFinish = noop,\n      onBefore = noop,\n      onCancel = noop,\n      onSuccess = noop,\n      onError = noop,\n      onCancelToken = noop,\n      onSubmitComplete = noop,\n      disableWhileProcessing = false,\n      resetOnError = false,\n      resetOnSuccess = false,\n      setDefaultsOnSuccess = false,\n      invalidateCacheTags = [],\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const form = useForm<Record<string, any>>({})\n    const formElement = useRef<HTMLFormElement>(null)\n\n    const resolvedMethod = useMemo(() => {\n      return isUrlMethodPair(action) ? action.method : (method.toLowerCase() as Method)\n    }, [action, method])\n\n    const [isDirty, setIsDirty] = useState(false)\n    const defaultData = useRef<FormData>(new FormData())\n\n    const getFormData = (): FormData => new FormData(formElement.current)\n\n    // Convert the FormData to an object because we can't compare two FormData\n    // instances directly (which is needed for isDirty), mergeDataIntoQueryString()\n    // expects an object, and submitting a FormData instance directly causes problems with nested objects.\n    const getData = (): Record<string, FormDataConvertible> => formDataToObject(getFormData())\n\n    const updateDirtyState = (event: Event) =>\n      deferStateUpdate(() =>\n        setIsDirty(event.type === 'reset' ? false : !isEqual(getData(), formDataToObject(defaultData.current))),\n      )\n\n    useEffect(() => {\n      defaultData.current = getFormData()\n\n      const formEvents: Array<keyof HTMLElementEventMap> = ['input', 'change', 'reset']\n\n      formEvents.forEach((e) => formElement.current.addEventListener(e, updateDirtyState))\n\n      return () => formEvents.forEach((e) => formElement.current?.removeEventListener(e, updateDirtyState))\n    }, [])\n\n    const reset = (...fields: string[]) => {\n      resetFormFields(formElement.current, defaultData.current, fields)\n    }\n\n    const resetAndClearErrors = (...fields: string[]) => {\n      form.clearErrors(...fields)\n      reset(...fields)\n    }\n\n    const maybeReset = (resetOption: boolean | string[]) => {\n      if (!resetOption) {\n        return\n      }\n\n      if (resetOption === true) {\n        reset()\n      } else if (resetOption.length > 0) {\n        reset(...resetOption)\n      }\n    }\n\n    const submit = () => {\n      const [url, _data] = mergeDataIntoQueryString(\n        resolvedMethod,\n        isUrlMethodPair(action) ? action.url : action,\n        getData(),\n        queryStringArrayFormat,\n      )\n\n      const submitOptions: FormSubmitOptions = {\n        headers,\n        errorBag,\n        showProgress,\n        invalidateCacheTags,\n        onCancelToken,\n        onBefore,\n        onStart,\n        onProgress,\n        onFinish,\n        onCancel,\n        onSuccess: (...args) => {\n          onSuccess(...args)\n          onSubmitComplete({\n            reset,\n            defaults,\n          })\n          maybeReset(resetOnSuccess)\n\n          if (setDefaultsOnSuccess === true) {\n            defaults()\n          }\n        },\n        onError(...args) {\n          onError(...args)\n          maybeReset(resetOnError)\n        },\n        ...options,\n      }\n\n      form.transform(() => transform(_data))\n      form.submit(resolvedMethod, url, submitOptions)\n    }\n\n    const defaults = () => {\n      defaultData.current = getFormData()\n      setIsDirty(false)\n    }\n\n    const exposed = () => ({\n      errors: form.errors,\n      hasErrors: form.hasErrors,\n      processing: form.processing,\n      progress: form.progress,\n      wasSuccessful: form.wasSuccessful,\n      recentlySuccessful: form.recentlySuccessful,\n      isDirty,\n      clearErrors: form.clearErrors,\n      resetAndClearErrors,\n      setError: form.setError,\n      reset,\n      submit,\n      defaults,\n    })\n\n    useImperativeHandle(ref, exposed, [form, isDirty, submit])\n\n    return createElement(\n      'form',\n      {\n        ...props,\n        ref: formElement,\n        action: isUrlMethodPair(action) ? action.url : action,\n        method: resolvedMethod,\n        onSubmit: (event: FormEvent<HTMLFormElement>) => {\n          event.preventDefault()\n          submit()\n        },\n        // Only React 19 supports passing a boolean to the `inert` attribute.\n        // To support earlier versions as well, we use the string 'true'.\n        // Unfortunately, React 19 treats an empty string as `false`.\n        // See: https://github.com/inertiajs/inertia/pull/2536\n        inert: disableWhileProcessing && form.processing && 'true',\n      },\n      typeof children === 'function' ? children(exposed()) : children,\n    )\n  },\n)\n\nForm.displayName = 'InertiaForm'\n\nexport default Form\n", "import {\n  ErrorValue,\n  FormDataErrors,\n  FormDataKeys,\n  FormDataType,\n  FormDataValues,\n  Method,\n  Progress,\n  router,\n  UrlMethodPair,\n  VisitOptions,\n} from '@inertiajs/core'\nimport { cloneDeep, get, has, isEqual, set } from 'lodash-es'\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useRef, useState } from 'react'\nimport useRemember from './useRemember'\n\nexport type SetDataByObject<TForm> = (data: Partial<TForm>) => void\nexport type SetDataByMethod<TForm> = (data: (previousData: TForm) => TForm) => void\nexport type SetDataByKeyValuePair<TForm> = <K extends FormDataKeys<TForm>>(\n  key: K,\n  value: FormDataValues<TForm, K>,\n) => void\nexport type SetDataAction<TForm extends Record<any, any>> = SetDataByObject<TForm> &\n  SetDataByMethod<TForm> &\n  SetDataByKeyValuePair<TForm>\n\ntype FormOptions = Omit<VisitOptions, 'data'>\n\nexport interface InertiaFormProps<TForm extends object> {\n  data: TForm\n  isDirty: boolean\n  errors: FormDataErrors<TForm>\n  hasErrors: boolean\n  processing: boolean\n  progress: Progress | null\n  wasSuccessful: boolean\n  recentlySuccessful: boolean\n  setData: SetDataAction<TForm>\n  transform: (callback: (data: TForm) => object) => void\n  setDefaults(): void\n  setDefaults<T extends FormDataKeys<TForm>>(field: T, value: FormDataValues<TForm, T>): void\n  setDefaults(fields: Partial<TForm>): void\n  reset<K extends FormDataKeys<TForm>>(...fields: K[]): void\n  clearErrors<K extends FormDataKeys<TForm>>(...fields: K[]): void\n  resetAndClearErrors<K extends FormDataKeys<TForm>>(...fields: K[]): void\n  setError<K extends FormDataKeys<TForm>>(field: K, value: ErrorValue): void\n  setError(errors: FormDataErrors<TForm>): void\n  submit: (...args: [Method, string, FormOptions?] | [UrlMethodPair, FormOptions?]) => void\n  get: (url: string, options?: FormOptions) => void\n  patch: (url: string, options?: FormOptions) => void\n  post: (url: string, options?: FormOptions) => void\n  put: (url: string, options?: FormOptions) => void\n  delete: (url: string, options?: FormOptions) => void\n  cancel: () => void\n}\nexport default function useForm<TForm extends FormDataType<TForm>>(\n  initialValues?: TForm | (() => TForm),\n): InertiaFormProps<TForm>\nexport default function useForm<TForm extends FormDataType<TForm>>(\n  rememberKey: string,\n  initialValues?: TForm | (() => TForm),\n): InertiaFormProps<TForm>\nexport default function useForm<TForm extends FormDataType<TForm>>(\n  rememberKeyOrInitialValues?: string | TForm | (() => TForm),\n  maybeInitialValues?: TForm | (() => TForm),\n): InertiaFormProps<TForm> {\n  const isMounted = useRef(null)\n  const rememberKey = typeof rememberKeyOrInitialValues === 'string' ? rememberKeyOrInitialValues : null\n  const [defaults, setDefaults] = useState(\n    (typeof rememberKeyOrInitialValues === 'string' ? maybeInitialValues : rememberKeyOrInitialValues) || ({} as TForm),\n  )\n  const cancelToken = useRef(null)\n  const recentlySuccessfulTimeoutId = useRef(null)\n  const [data, setData] = rememberKey ? useRemember(defaults, `${rememberKey}:data`) : useState(defaults)\n  const [errors, setErrors] = rememberKey\n    ? useRemember({} as FormDataErrors<TForm>, `${rememberKey}:errors`)\n    : useState({} as FormDataErrors<TForm>)\n  const [hasErrors, setHasErrors] = useState(false)\n  const [processing, setProcessing] = useState(false)\n  const [progress, setProgress] = useState(null)\n  const [wasSuccessful, setWasSuccessful] = useState(false)\n  const [recentlySuccessful, setRecentlySuccessful] = useState(false)\n  const transform = useRef((data) => data)\n  const isDirty = useMemo(() => !isEqual(data, defaults), [data, defaults])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n\n  // Track if setDefaults was called manually during onSuccess to avoid\n  // overriding user's custom defaults with automatic behavior.\n  const setDefaultsCalledInOnSuccess = useRef(false)\n\n  const submit = useCallback(\n    (...args) => {\n      const objectPassed = args[0] !== null && typeof args[0] === 'object'\n\n      const method = objectPassed ? args[0].method : args[0]\n      const url = objectPassed ? args[0].url : args[1]\n      const options = (objectPassed ? args[1] : args[2]) ?? {}\n\n      setDefaultsCalledInOnSuccess.current = false\n\n      const _options = {\n        ...options,\n        onCancelToken: (token) => {\n          cancelToken.current = token\n\n          if (options.onCancelToken) {\n            return options.onCancelToken(token)\n          }\n        },\n        onBefore: (visit) => {\n          setWasSuccessful(false)\n          setRecentlySuccessful(false)\n          clearTimeout(recentlySuccessfulTimeoutId.current)\n\n          if (options.onBefore) {\n            return options.onBefore(visit)\n          }\n        },\n        onStart: (visit) => {\n          setProcessing(true)\n\n          if (options.onStart) {\n            return options.onStart(visit)\n          }\n        },\n        onProgress: (event) => {\n          setProgress(event)\n\n          if (options.onProgress) {\n            return options.onProgress(event)\n          }\n        },\n        onSuccess: async (page) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n            setErrors({} as FormDataErrors<TForm>)\n            setHasErrors(false)\n            setWasSuccessful(true)\n            setRecentlySuccessful(true)\n            recentlySuccessfulTimeoutId.current = setTimeout(() => {\n              if (isMounted.current) {\n                setRecentlySuccessful(false)\n              }\n            }, 2000)\n          }\n\n          const onSuccess = options.onSuccess ? await options.onSuccess(page) : null\n\n          if (isMounted.current && !setDefaultsCalledInOnSuccess.current) {\n            setData((data) => {\n              setDefaults(cloneDeep(data))\n              return data\n            })\n          }\n\n          return onSuccess\n        },\n        onError: (errors) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n            setErrors(errors)\n            setHasErrors(true)\n          }\n\n          if (options.onError) {\n            return options.onError(errors)\n          }\n        },\n        onCancel: () => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n          }\n\n          if (options.onCancel) {\n            return options.onCancel()\n          }\n        },\n        onFinish: (visit) => {\n          if (isMounted.current) {\n            setProcessing(false)\n            setProgress(null)\n          }\n\n          cancelToken.current = null\n\n          if (options.onFinish) {\n            return options.onFinish(visit)\n          }\n        },\n      }\n\n      if (method === 'delete') {\n        router.delete(url, { ..._options, data: transform.current(data) })\n      } else {\n        router[method](url, transform.current(data), _options)\n      }\n    },\n    [data, setErrors, transform],\n  )\n\n  const setDataFunction = useCallback(\n    (keyOrData: FormDataKeys<TForm> | Function | Partial<TForm>, maybeValue?: any) => {\n      if (typeof keyOrData === 'string') {\n        setData((data) => set(cloneDeep(data), keyOrData, maybeValue))\n      } else if (typeof keyOrData === 'function') {\n        setData((data) => keyOrData(data))\n      } else {\n        setData(keyOrData as TForm)\n      }\n    },\n    [setData],\n  )\n\n  const [dataAsDefaults, setDataAsDefaults] = useState(false)\n\n  const dataRef = useRef(data)\n\n  useEffect(() => {\n    dataRef.current = data\n  })\n\n  const setDefaultsFunction = useCallback(\n    (fieldOrFields?: FormDataKeys<TForm> | Partial<TForm>, maybeValue?: unknown) => {\n      setDefaultsCalledInOnSuccess.current = true\n\n      if (typeof fieldOrFields === 'undefined') {\n        setDefaults(dataRef.current)\n        // If setData was called right before setDefaults, data was not\n        // updated in that render yet, so we set a flag to update\n        // defaults right after the next render.\n        setDataAsDefaults(true)\n      } else {\n        setDefaults((defaults) => {\n          return typeof fieldOrFields === 'string'\n            ? set(cloneDeep(defaults), fieldOrFields, maybeValue)\n            : Object.assign(cloneDeep(defaults), fieldOrFields)\n        })\n      }\n    },\n    [setDefaults],\n  )\n\n  useLayoutEffect(() => {\n    if (!dataAsDefaults) {\n      return\n    }\n\n    if (isDirty) {\n      // Data has been updated in this next render and is different from\n      // the defaults, so now we can set defaults to the current data.\n      setDefaults(data)\n    }\n\n    setDataAsDefaults(false)\n  }, [dataAsDefaults])\n\n  const reset = useCallback(\n    (...fields) => {\n      if (fields.length === 0) {\n        setData(defaults)\n      } else {\n        setData((data) =>\n          (fields as Array<FormDataKeys<TForm>>)\n            .filter((key) => has(defaults, key))\n            .reduce(\n              (carry, key) => {\n                return set(carry, key, get(defaults, key))\n              },\n              { ...data } as TForm,\n            ),\n        )\n      }\n    },\n    [setData, defaults],\n  )\n\n  const setError = useCallback(\n    (fieldOrFields: FormDataKeys<TForm> | FormDataErrors<TForm>, maybeValue?: string) => {\n      setErrors((errors) => {\n        const newErrors = {\n          ...errors,\n          ...(typeof fieldOrFields === 'string' ? { [fieldOrFields]: maybeValue } : fieldOrFields),\n        }\n        setHasErrors(Object.keys(newErrors).length > 0)\n        return newErrors\n      })\n    },\n    [setErrors, setHasErrors],\n  )\n\n  const clearErrors = useCallback(\n    (...fields) => {\n      setErrors((errors) => {\n        const newErrors = Object.keys(errors).reduce(\n          (carry, field) => ({\n            ...carry,\n            ...(fields.length > 0 && !fields.includes(field) ? { [field]: errors[field] } : {}),\n          }),\n          {},\n        )\n        setHasErrors(Object.keys(newErrors).length > 0)\n        return newErrors as FormDataErrors<TForm>\n      })\n    },\n    [setErrors, setHasErrors],\n  )\n\n  const resetAndClearErrors = useCallback(\n    (...fields) => {\n      reset(...fields)\n      clearErrors(...fields)\n    },\n    [reset, clearErrors],\n  )\n\n  const createSubmitMethod = (method) => (url, options) => {\n    submit(method, url, options)\n  }\n  const getMethod = useCallback(createSubmitMethod('get'), [submit])\n  const post = useCallback(createSubmitMethod('post'), [submit])\n  const put = useCallback(createSubmitMethod('put'), [submit])\n  const patch = useCallback(createSubmitMethod('patch'), [submit])\n  const deleteMethod = useCallback(createSubmitMethod('delete'), [submit])\n\n  const cancel = useCallback(() => {\n    if (cancelToken.current) {\n      cancelToken.current.cancel()\n    }\n  }, [])\n\n  const transformFunction = useCallback((callback) => {\n    transform.current = callback\n  }, [])\n\n  return {\n    data,\n    setData: setDataFunction,\n    isDirty,\n    errors,\n    hasErrors,\n    processing,\n    progress,\n    wasSuccessful,\n    recentlySuccessful,\n    transform: transformFunction,\n    setDefaults: setDefaultsFunction,\n    reset,\n    setError,\n    clearErrors,\n    resetAndClearErrors,\n    submit,\n    get: getMethod,\n    post,\n    put,\n    patch,\n    delete: deleteMethod,\n    cancel,\n  }\n}\n", "import { router } from '@inertiajs/core'\nimport { Dispatch, SetStateAction, useEffect, useState } from 'react'\n\nexport default function useRemember<State>(\n  initialState: State,\n  key?: string,\n): [State, Dispatch<SetStateAction<State>>] {\n  const [state, setState] = useState(() => {\n    const restored = router.restore(key) as State\n\n    return restored !== undefined ? restored : initialState\n  })\n\n  useEffect(() => {\n    router.remember(state, key)\n  }, [state, key])\n\n  return [state, setState]\n}\n", "import { escape } from 'lodash-es'\nimport React, { FunctionComponent, useContext, useEffect, useMemo } from 'react'\nimport HeadContext from './HeadContext'\n\ntype InertiaHeadProps = {\n  title?: string\n  children?: React.ReactNode\n}\n\ntype InertiaHead = FunctionComponent<InertiaHeadProps>\n\nconst Head: InertiaHead = function ({ children, title }) {\n  const headManager = useContext(HeadContext)\n  const provider = useMemo(() => headManager.createProvider(), [headManager])\n  const isServer = typeof window === 'undefined'\n\n  useEffect(() => {\n    provider.reconnect()\n    provider.update(renderNodes(children))\n    return () => {\n      provider.disconnect()\n    }\n  }, [provider, children, title])\n\n  function isUnaryTag(node) {\n    return (\n      [\n        'area',\n        'base',\n        'br',\n        'col',\n        'embed',\n        'hr',\n        'img',\n        'input',\n        'keygen',\n        'link',\n        'meta',\n        'param',\n        'source',\n        'track',\n        'wbr',\n      ].indexOf(node.type) > -1\n    )\n  }\n\n  function renderTagStart(node) {\n    const attrs = Object.keys(node.props).reduce((carry, name) => {\n      if (['head-key', 'children', 'dangerouslySetInnerHTML'].includes(name)) {\n        return carry\n      }\n      const value = String(node.props[name])\n      if (value === '') {\n        return carry + ` ${name}`\n      } else {\n        return carry + ` ${name}=\"${escape(value)}\"`\n      }\n    }, '')\n    return `<${node.type}${attrs}>`\n  }\n\n  function renderTagChildren(node) {\n    return typeof node.props.children === 'string'\n      ? node.props.children\n      : node.props.children.reduce((html, child) => html + renderTag(child), '')\n  }\n\n  function renderTag(node) {\n    let html = renderTagStart(node)\n    if (node.props.children) {\n      html += renderTagChildren(node)\n    }\n    if (node.props.dangerouslySetInnerHTML) {\n      html += node.props.dangerouslySetInnerHTML.__html\n    }\n    if (!isUnaryTag(node)) {\n      html += `</${node.type}>`\n    }\n    return html\n  }\n\n  function ensureNodeHasInertiaProp(node) {\n    return React.cloneElement(node, {\n      inertia: node.props['head-key'] !== undefined ? node.props['head-key'] : '',\n    })\n  }\n\n  function renderNode(node) {\n    return renderTag(ensureNodeHasInertiaProp(node))\n  }\n\n  function renderNodes(nodes) {\n    const computed = React.Children.toArray(nodes)\n      .filter((node) => node)\n      .map((node) => renderNode(node))\n    if (title && !computed.find((tag) => tag.startsWith('<title'))) {\n      computed.push(`<title inertia>${title}</title>`)\n    }\n    return computed\n  }\n\n  if (isServer) {\n    provider.update(renderNodes(children))\n  }\n\n  return null\n}\nexport default Head\n", "import {\n  getScrollableParent,\n  InfiniteScrollActionSlotProps,\n  InfiniteScrollComponentBaseProps,\n  InfiniteScrollRef,\n  InfiniteScrollSlotProps,\n  useInfiniteScroll,\n  UseInfiniteScrollProps,\n} from '@inertiajs/core'\nimport React, {\n  createElement,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nconst resolveHTMLElement = (\n  value: string | React.RefObject<HTMLElement | null> | null,\n  fallback: HTMLElement | null,\n): HTMLElement | null => {\n  if (!value) {\n    return fallback\n  }\n\n  // React ref object { current: HTMLElement | null }\n  if (value && typeof value === 'object' && 'current' in value) {\n    return value.current\n  }\n\n  // CSS Selector string\n  if (typeof value === 'string') {\n    return document.querySelector(value) as HTMLElement | null\n  }\n\n  return fallback\n}\n\n// Helper function to render slot content\nconst renderSlot = (\n  slotContent: React.ReactNode | ((props: InfiniteScrollActionSlotProps) => React.ReactNode) | undefined,\n  slotProps: InfiniteScrollActionSlotProps,\n  fallback: React.ReactNode = null,\n): React.ReactNode => {\n  if (!slotContent) {\n    return fallback\n  }\n\n  return typeof slotContent === 'function' ? slotContent(slotProps) : slotContent\n}\n\ninterface ComponentProps\n  extends InfiniteScrollComponentBaseProps,\n    Omit<React.HTMLAttributes<HTMLElement>, keyof InfiniteScrollComponentBaseProps | 'children'> {\n  children?: React.ReactNode | ((props: InfiniteScrollSlotProps) => React.ReactNode)\n\n  // Element references for custom trigger detection (when you want different trigger elements)\n  startElement?: string | React.RefObject<HTMLElement | null>\n  endElement?: string | React.RefObject<HTMLElement | null>\n  itemsElement?: string | React.RefObject<HTMLElement | null>\n\n  // Render slots for UI components (when you want custom loading/action components)\n  previous?: React.ReactNode | ((props: InfiniteScrollActionSlotProps) => React.ReactNode)\n  next?: React.ReactNode | ((props: InfiniteScrollActionSlotProps) => React.ReactNode)\n  loading?: React.ReactNode | ((props: InfiniteScrollActionSlotProps) => React.ReactNode)\n\n  onlyNext?: boolean\n  onlyPrevious?: boolean\n}\n\nconst InfiniteScroll = forwardRef<InfiniteScrollRef, ComponentProps>(\n  (\n    {\n      data,\n      buffer = 0,\n      as = 'div',\n      manual = false,\n      manualAfter = 0,\n      preserveUrl = false,\n      reverse = false,\n      autoScroll,\n      children,\n      startElement,\n      endElement,\n      itemsElement,\n      previous,\n      next,\n      loading,\n      onlyNext = false,\n      onlyPrevious = false,\n      ...props\n    },\n    ref,\n  ) => {\n    const [startElementFromRef, setStartElementFromRef] = useState<HTMLElement | null>(null)\n    const startElementRef = useCallback((node: HTMLElement | null) => setStartElementFromRef(node), [])\n\n    const [endElementFromRef, setEndElementFromRef] = useState<HTMLElement | null>(null)\n    const endElementRef = useCallback((node: HTMLElement | null) => setEndElementFromRef(node), [])\n\n    const [itemsElementFromRef, setItemsElementFromRef] = useState<HTMLElement | null>(null)\n    const itemsElementRef = useCallback((node: HTMLElement | null) => setItemsElementFromRef(node), [])\n\n    const [loadingPrevious, setLoadingPrevious] = useState(false)\n    const [loadingNext, setLoadingNext] = useState(false)\n    const [requestCount, setRequestCount] = useState(0)\n\n    const [resolvedStartElement, setResolvedStartElement] = useState<HTMLElement | null>(null)\n    const [resolvedEndElement, setResolvedEndElement] = useState<HTMLElement | null>(null)\n    const [resolvedItemsElement, setResolvedItemsElement] = useState<HTMLElement | null>(null)\n\n    // Update elements when refs or props change\n    useEffect(() => {\n      const element = startElement ? resolveHTMLElement(startElement, startElementFromRef) : startElementFromRef\n      setResolvedStartElement(element)\n    }, [startElement, startElementFromRef])\n\n    useEffect(() => {\n      const element = endElement ? resolveHTMLElement(endElement, endElementFromRef) : endElementFromRef\n      setResolvedEndElement(element)\n    }, [endElement, endElementFromRef])\n\n    useEffect(() => {\n      const element = itemsElement ? resolveHTMLElement(itemsElement, itemsElementFromRef) : itemsElementFromRef\n      setResolvedItemsElement(element)\n    }, [itemsElement, itemsElementFromRef])\n\n    const scrollableParent = useMemo(() => getScrollableParent(resolvedItemsElement), [resolvedItemsElement])\n\n    const manualMode = useMemo(\n      () => manual || (manualAfter > 0 && requestCount >= manualAfter),\n      [manual, manualAfter, requestCount],\n    )\n    const autoLoad = useMemo(() => !manualMode, [manualMode])\n\n    const callbackPropsRef = useRef({\n      buffer,\n      onlyNext,\n      onlyPrevious,\n      reverse,\n      preserveUrl,\n    })\n\n    callbackPropsRef.current = {\n      buffer,\n      onlyNext,\n      onlyPrevious,\n      reverse,\n      preserveUrl,\n    }\n\n    const [infiniteScroll, setInfiniteScroll] = useState<UseInfiniteScrollProps | null>(null)\n\n    const dataManager = useMemo(() => infiniteScroll?.dataManager, [infiniteScroll])\n    const elementManager = useMemo(() => infiniteScroll?.elementManager, [infiniteScroll])\n\n    const scrollToBottom = useCallback(() => {\n      if (scrollableParent) {\n        scrollableParent.scrollTo({\n          top: scrollableParent.scrollHeight,\n          behavior: 'instant',\n        })\n      } else {\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'instant',\n        })\n      }\n    }, [scrollableParent])\n\n    // Main setup effect - only recreate when structural dependencies change\n    useEffect(() => {\n      if (!resolvedItemsElement) {\n        return\n      }\n\n      const infiniteScrollInstance = useInfiniteScroll({\n        // Data\n        getPropName: () => data,\n        inReverseMode: () => callbackPropsRef.current.reverse,\n        shouldFetchNext: () => !callbackPropsRef.current.onlyPrevious,\n        shouldFetchPrevious: () => !callbackPropsRef.current.onlyNext,\n        shouldPreserveUrl: () => callbackPropsRef.current.preserveUrl,\n\n        // Elements\n        getTriggerMargin: () => callbackPropsRef.current.buffer,\n        getStartElement: () => resolvedStartElement,\n        getEndElement: () => resolvedEndElement,\n        getItemsElement: () => resolvedItemsElement,\n        getScrollableParent: () => scrollableParent,\n\n        // Callbacks\n        onBeforePreviousRequest: () => setLoadingPrevious(true),\n        onBeforeNextRequest: () => setLoadingNext(true),\n        onCompletePreviousRequest: () => {\n          setLoadingPrevious(false)\n          setRequestCount((count) => count + 1)\n        },\n        onCompleteNextRequest: () => {\n          setLoadingNext(false)\n          setRequestCount((count) => count + 1)\n        },\n      })\n\n      setInfiniteScroll(infiniteScrollInstance)\n      const { dataManager, elementManager } = infiniteScrollInstance\n\n      elementManager.setupObservers()\n      elementManager.processServerLoadedElements(dataManager.getLastLoadedPage())\n\n      if (autoLoad) {\n        elementManager.enableTriggers()\n      }\n\n      return () => {\n        elementManager.flushAll()\n        setInfiniteScroll(null)\n      }\n    }, [data, resolvedItemsElement, resolvedStartElement, resolvedEndElement, scrollableParent])\n\n    useEffect(() => {\n      autoLoad ? elementManager?.enableTriggers() : elementManager?.disableTriggers()\n    }, [autoLoad, onlyNext, onlyPrevious, resolvedStartElement, resolvedEndElement])\n\n    useEffect(() => {\n      // autoScroll defaults to reverse value if not explicitly set\n      const shouldAutoScroll = autoScroll !== undefined ? autoScroll : reverse\n\n      if (shouldAutoScroll) {\n        scrollToBottom()\n      }\n    }, [scrollableParent])\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        fetchNext: dataManager?.fetchNext || (() => {}),\n        fetchPrevious: dataManager?.fetchPrevious || (() => {}),\n        hasPrevious: dataManager?.hasPrevious || (() => false),\n        hasNext: dataManager?.hasNext || (() => false),\n      }),\n      [dataManager],\n    )\n\n    const headerAutoMode = autoLoad && !onlyNext\n    const footerAutoMode = autoLoad && !onlyPrevious\n\n    const sharedExposed: Pick<\n      InfiniteScrollActionSlotProps,\n      'loadingPrevious' | 'loadingNext' | 'hasPrevious' | 'hasNext'\n    > = {\n      loadingPrevious,\n      loadingNext,\n      hasPrevious: dataManager?.hasPrevious() ?? false,\n      hasNext: dataManager?.hasNext() ?? false,\n    }\n\n    const exposedPrevious: InfiniteScrollActionSlotProps = {\n      loading: loadingPrevious,\n      fetch: dataManager?.fetchPrevious ?? (() => {}),\n      autoMode: headerAutoMode,\n      manualMode: !headerAutoMode,\n      hasMore: dataManager?.hasPrevious() ?? false,\n      ...sharedExposed,\n    }\n\n    const exposedNext: InfiniteScrollActionSlotProps = {\n      loading: loadingNext,\n      fetch: dataManager?.fetchNext ?? (() => {}),\n      autoMode: footerAutoMode,\n      manualMode: !footerAutoMode,\n      hasMore: dataManager?.hasNext() ?? false,\n      ...sharedExposed,\n    }\n\n    const exposedSlot: InfiniteScrollSlotProps = {\n      loading: loadingPrevious || loadingNext,\n      loadingPrevious,\n      loadingNext,\n    }\n\n    const renderElements = []\n\n    // Only render previous trigger if not using custom element selector/ref\n    if (!startElement) {\n      renderElements.push(\n        createElement(\n          'div',\n          { ref: startElementRef },\n          // Render previous slot or fallback to loading indicator\n          renderSlot(previous, exposedPrevious, loadingPrevious ? renderSlot(loading, exposedPrevious) : null),\n        ),\n      )\n    }\n\n    renderElements.push(\n      createElement(\n        as,\n        { ...props, ref: itemsElementRef },\n        typeof children === 'function' ? children(exposedSlot) : children,\n      ),\n    )\n\n    // Only render next trigger if not using custom element selector/ref\n    if (!endElement) {\n      renderElements.push(\n        createElement(\n          'div',\n          { ref: endElementRef },\n          // Render next slot or fallback to loading indicator\n          renderSlot(next, exposedNext, loadingNext ? renderSlot(loading, exposedNext) : null),\n        ),\n      )\n    }\n\n    return createElement(React.Fragment, {}, ...(reverse ? [...renderElements].reverse() : renderElements))\n  },\n)\n\nInfiniteScroll.displayName = 'InertiaInfiniteScroll'\n\nexport default InfiniteScroll\n", "import {\n  ActiveVisit,\n  isUrlMethodPair,\n  LinkComponentBaseProps,\n  LinkPrefetchOption,\n  mergeDataIntoQueryString,\n  Method,\n  PendingVisit,\n  router,\n  shouldIntercept,\n  shouldNavigate,\n} from '@inertiajs/core'\nimport { createElement, ElementType, forwardRef, useEffect, useMemo, useRef, useState } from 'react'\n\nconst noop = () => undefined\n\ninterface BaseInertiaLinkProps extends LinkComponentBaseProps {\n  as?: ElementType\n  onClick?: (event: React.MouseEvent<Element>) => void\n}\n\nexport type InertiaLinkProps = BaseInertiaLinkProps &\n  Omit<React.HTMLAttributes<HTMLElement>, keyof BaseInertiaLinkProps> &\n  Omit<React.AllHTMLAttributes<HTMLElement>, keyof BaseInertiaLinkProps>\n\nconst Link = forwardRef<unknown, InertiaLinkProps>(\n  (\n    {\n      children,\n      as = 'a',\n      data = {},\n      href = '',\n      method = 'get',\n      preserveScroll = false,\n      preserveState = null,\n      replace = false,\n      only = [],\n      except = [],\n      headers = {},\n      queryStringArrayFormat = 'brackets',\n      async = false,\n      onClick = noop,\n      onCancelToken = noop,\n      onBefore = noop,\n      onStart = noop,\n      onProgress = noop,\n      onFinish = noop,\n      onCancel = noop,\n      onSuccess = noop,\n      onError = noop,\n      onPrefetching = noop,\n      onPrefetched = noop,\n      prefetch = false,\n      cacheFor = 0,\n      cacheTags = [],\n      ...props\n    },\n    ref,\n  ) => {\n    const [inFlightCount, setInFlightCount] = useState(0)\n    const hoverTimeout = useRef<number>(null)\n\n    const _method = useMemo(() => {\n      return isUrlMethodPair(href) ? href.method : (method.toLowerCase() as Method)\n    }, [href, method])\n\n    const _as = useMemo(() => {\n      if (typeof as !== 'string' || as.toLowerCase() !== 'a') {\n        // Custom component or element\n        return as\n      }\n\n      return _method !== 'get' ? 'button' : as.toLowerCase()\n    }, [as, _method])\n\n    const mergeDataArray = useMemo(\n      () => mergeDataIntoQueryString(_method, isUrlMethodPair(href) ? href.url : href, data, queryStringArrayFormat),\n      [href, _method, data, queryStringArrayFormat],\n    )\n\n    const url = useMemo(() => mergeDataArray[0], [mergeDataArray])\n    const _data = useMemo(() => mergeDataArray[1], [mergeDataArray])\n\n    const baseParams = useMemo(\n      () => ({\n        data: _data,\n        method: _method,\n        preserveScroll,\n        preserveState: preserveState ?? _method !== 'get',\n        replace,\n        only,\n        except,\n        headers,\n        async,\n      }),\n      [_data, _method, preserveScroll, preserveState, replace, only, except, headers, async],\n    )\n\n    const visitParams = useMemo(\n      () => ({\n        ...baseParams,\n        onCancelToken,\n        onBefore,\n        onStart(visit: PendingVisit) {\n          setInFlightCount((count) => count + 1)\n          onStart(visit)\n        },\n        onProgress,\n        onFinish(visit: ActiveVisit) {\n          setInFlightCount((count) => count - 1)\n          onFinish(visit)\n        },\n        onCancel,\n        onSuccess,\n        onError,\n      }),\n      [baseParams, onCancelToken, onBefore, onStart, onProgress, onFinish, onCancel, onSuccess, onError],\n    )\n\n    const prefetchModes: LinkPrefetchOption[] = useMemo(\n      () => {\n        if (prefetch === true) {\n          return ['hover']\n        }\n\n        if (prefetch === false) {\n          return []\n        }\n\n        if (Array.isArray(prefetch)) {\n          return prefetch\n        }\n\n        return [prefetch]\n      },\n      Array.isArray(prefetch) ? prefetch : [prefetch],\n    )\n\n    const cacheForValue = useMemo(() => {\n      if (cacheFor !== 0) {\n        // If they've provided a value, respect it\n        return cacheFor\n      }\n\n      if (prefetchModes.length === 1 && prefetchModes[0] === 'click') {\n        // If they've only provided a prefetch mode of 'click',\n        // we should only prefetch for the next request but not keep it around\n        return 0\n      }\n\n      // Otherwise, default to 30 seconds\n      return 30_000\n    }, [cacheFor, prefetchModes])\n\n    const doPrefetch = useMemo(() => {\n      return () => {\n        router.prefetch(\n          url,\n          {\n            ...baseParams,\n            onPrefetching,\n            onPrefetched,\n          },\n          { cacheFor: cacheForValue, cacheTags },\n        )\n      }\n    }, [url, baseParams, onPrefetching, onPrefetched, cacheForValue, cacheTags])\n\n    useEffect(() => {\n      return () => {\n        clearTimeout(hoverTimeout.current)\n      }\n    }, [])\n\n    useEffect(() => {\n      if (prefetchModes.includes('mount')) {\n        setTimeout(() => doPrefetch())\n      }\n    }, prefetchModes)\n\n    const regularEvents = {\n      onClick: (event) => {\n        onClick(event)\n\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n\n          router.visit(url, visitParams)\n        }\n      },\n    }\n\n    const prefetchHoverEvents = {\n      onMouseEnter: () => {\n        hoverTimeout.current = window.setTimeout(() => {\n          doPrefetch()\n        }, 75)\n      },\n      onMouseLeave: () => {\n        clearTimeout(hoverTimeout.current)\n      },\n      onClick: regularEvents.onClick,\n    }\n\n    const prefetchClickEvents = {\n      onMouseDown: (event) => {\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n          doPrefetch()\n        }\n      },\n      onKeyDown: (event) => {\n        if (shouldIntercept(event) && shouldNavigate(event)) {\n          event.preventDefault()\n          doPrefetch()\n        }\n      },\n      onMouseUp: (event) => {\n        event.preventDefault()\n        router.visit(url, visitParams)\n      },\n      onKeyUp: (event) => {\n        if (shouldNavigate(event)) {\n          event.preventDefault()\n          router.visit(url, visitParams)\n        }\n      },\n      onClick: (event) => {\n        onClick(event)\n\n        if (shouldIntercept(event)) {\n          // Let the mouseup/keyup event handle the visit\n          event.preventDefault()\n        }\n      },\n    }\n\n    const elProps = useMemo(() => {\n      if (_as === 'button') {\n        return { type: 'button' }\n      }\n\n      if (_as === 'a' || typeof _as !== 'string') {\n        return { href: url }\n      }\n\n      return {}\n    }, [_as, url])\n\n    return createElement(\n      _as,\n      {\n        ...props,\n        ...elProps,\n        ref,\n        ...(() => {\n          if (prefetchModes.includes('hover')) {\n            return prefetchHoverEvents\n          }\n\n          if (prefetchModes.includes('click')) {\n            return prefetchClickEvents\n          }\n\n          return regularEvents\n        })(),\n        'data-loading': inFlightCount > 0 ? '' : undefined,\n      },\n      children,\n    )\n  },\n)\nLink.displayName = 'InertiaLink'\n\nexport default Link\n", "import { PollOptions, ReloadOptions, router } from '@inertiajs/core'\nimport { useEffect, useRef } from 'react'\n\nexport default function usePoll(\n  interval: number,\n  requestOptions: ReloadOptions = {},\n  options: PollOptions = {\n    keepAlive: false,\n    autoStart: true,\n  },\n) {\n  const pollRef = useRef(\n    router.poll(interval, requestOptions, {\n      ...options,\n      autoStart: false,\n    }),\n  )\n\n  useEffect(() => {\n    if (options.autoStart ?? true) {\n      pollRef.current.start()\n    }\n\n    return () => pollRef.current.stop()\n  }, [])\n\n  return {\n    stop: pollRef.current.stop,\n    start: pollRef.current.start,\n  }\n}\n", "import { router, VisitOptions } from '@inertiajs/core'\nimport { useEffect, useState } from 'react'\n\nexport default function usePrefetch(options: VisitOptions = {}): {\n  lastUpdatedAt: number | null\n  isPrefetching: boolean\n  isPrefetched: boolean\n  flush: () => void\n} {\n  const cached = typeof window === 'undefined' ? null : router.getCached(window.location.pathname, options)\n  const inFlight = typeof window === 'undefined' ? null : router.getPrefetching(window.location.pathname, options)\n\n  const [lastUpdatedAt, setLastUpdatedAt] = useState<number | null>(cached?.staleTimestamp || null)\n  const [isPrefetching, setIsPrefetching] = useState(inFlight !== null)\n  const [isPrefetched, setIsPrefetched] = useState(cached !== null)\n\n  useEffect(() => {\n    const onPrefetchingListener = router.on('prefetching', (e) => {\n      if (e.detail.visit.url.pathname === window.location.pathname) {\n        setIsPrefetching(true)\n      }\n    })\n\n    const onPrefetchedListener = router.on('prefetched', (e) => {\n      if (e.detail.visit.url.pathname === window.location.pathname) {\n        setIsPrefetching(false)\n        setIsPrefetched(true)\n        setLastUpdatedAt(e.detail.fetchedAt)\n      }\n    })\n\n    return () => {\n      onPrefetchedListener()\n      onPrefetchingListener()\n    }\n  }, [])\n\n  return {\n    lastUpdatedAt,\n    isPrefetching,\n    isPrefetched,\n    flush: () => router.flush(window.location.pathname, options),\n  }\n}\n", "import { ReloadOptions, router } from '@inertiajs/core'\nimport { createElement, ReactNode, useCallback, useEffect, useRef, useState } from 'react'\n\ninterface WhenVisibleProps {\n  children: ReactNode | (() => ReactNode)\n  fallback: ReactNode | (() => ReactNode)\n  data?: string | string[]\n  params?: ReloadOptions\n  buffer?: number\n  as?: string\n  always?: boolean\n}\n\nconst WhenVisible = ({ children, data, params, buffer, as, always, fallback }: WhenVisibleProps) => {\n  always = always ?? false\n  as = as ?? 'div'\n  fallback = fallback ?? null\n\n  const [loaded, setLoaded] = useState(false)\n  const hasFetched = useRef<boolean>(false)\n  const fetching = useRef<boolean>(false)\n  const ref = useRef<HTMLDivElement>(null)\n\n  const getReloadParams = useCallback<() => Partial<ReloadOptions>>(() => {\n    if (data) {\n      return {\n        only: (Array.isArray(data) ? data : [data]) as string[],\n      }\n    }\n\n    if (!params) {\n      throw new Error('You must provide either a `data` or `params` prop.')\n    }\n\n    return params\n  }, [params, data])\n\n  useEffect(() => {\n    if (!ref.current) {\n      return\n    }\n\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (!entries[0].isIntersecting) {\n          return\n        }\n\n        if (!always && hasFetched.current) {\n          observer.disconnect()\n        }\n\n        if (fetching.current) {\n          return\n        }\n\n        hasFetched.current = true\n        fetching.current = true\n\n        const reloadParams = getReloadParams()\n\n        router.reload({\n          ...reloadParams,\n          onStart: (e) => {\n            fetching.current = true\n            reloadParams.onStart?.(e)\n          },\n          onFinish: (e) => {\n            setLoaded(true)\n            fetching.current = false\n            reloadParams.onFinish?.(e)\n\n            if (!always) {\n              observer.disconnect()\n            }\n          },\n        })\n      },\n      {\n        rootMargin: `${buffer || 0}px`,\n      },\n    )\n\n    observer.observe(ref.current)\n\n    return () => {\n      observer.disconnect()\n    }\n  }, [ref, getReloadParams, buffer])\n\n  const resolveChildren = () => (typeof children === 'function' ? children() : children)\n  const resolveFallback = () => (typeof fallback === 'function' ? fallback() : fallback)\n\n  if (always || !loaded) {\n    return createElement(\n      as,\n      {\n        props: null,\n        ref,\n      },\n      loaded ? resolveChildren() : resolveFallback(),\n    )\n  }\n\n  return loaded ? resolveChildren() : null\n}\n\nWhenVisible.displayName = 'InertiaWhenVisible'\n\nexport default WhenVisible\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "createContext", "current", "children", "progress", "router", "createElement", "useState", "useMemo", "useEffect", "data", "errors", "defaults", "React", "useRef", "isEqual", "useContext", "forwardRef", "useCallback", "dataManager", "elementManager", "useImperativeHandle", "noop", "isUrlMethodPair", "mergeDataIntoQueryString", "Progress"]
}
